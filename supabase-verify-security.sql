-- ============================================
-- SCRIPT DE VÃ‰RIFICATION DE SÃ‰CURITÃ‰ SUPABASE
-- ============================================
-- ExÃ©cutez ce script pour vÃ©rifier l'Ã©tat de vos policies RLS
-- ============================================

-- 1. VÃ©rifier que RLS est activÃ© sur orders
SELECT
  tablename,
  rowsecurity AS "RLS Enabled"
FROM pg_tables
WHERE schemaname = 'public' AND tablename = 'orders';

-- RÃ©sultat attendu : RLS Enabled = true

-- 2. Lister TOUTES les policies sur orders
SELECT
  schemaname,
  tablename,
  policyname,
  permissive,
  cmd AS "Operation",
  CASE
    WHEN qual = 'true' THEN 'ðŸ”´ DANGER: true (accÃ¨s public)'
    WHEN qual = 'false' THEN 'âœ… SÃ‰CURISÃ‰: false (bloquÃ©)'
    ELSE COALESCE(qual, 'NULL')
  END AS "USING clause",
  CASE
    WHEN with_check = 'true' THEN 'ðŸ”´ DANGER: true (accÃ¨s public)'
    WHEN with_check = 'false' THEN 'âœ… SÃ‰CURISÃ‰: false (bloquÃ©)'
    ELSE COALESCE(with_check, 'NULL')
  END AS "WITH CHECK clause"
FROM pg_policies
WHERE tablename = 'orders'
ORDER BY cmd;

-- RÃ©sultat attendu :
-- - INSERT : WITH CHECK = true (nÃ©cessaire pour crÃ©er des commandes)
-- - SELECT : USING = false (lecture bloquÃ©e pour le public)
-- - UPDATE : USING = false ET WITH CHECK = false (modification bloquÃ©e)
-- - DELETE : USING = false (suppression bloquÃ©e)

-- 3. Test de sÃ©curitÃ© : Essayer de lire les commandes
-- Cette requÃªte devrait Ã‰CHOUER si RLS est bien configurÃ©
-- (quand exÃ©cutÃ©e avec anon key)
SELECT COUNT(*) FROM orders;

-- 4. VÃ©rifier qu'il n'y a PAS de policies dangereuses
SELECT
  policyname,
  cmd,
  qual,
  with_check
FROM pg_policies
WHERE tablename = 'orders'
  AND (qual = 'true' OR with_check = 'true')
  AND cmd IN ('SELECT', 'UPDATE', 'DELETE');

-- RÃ©sultat attendu : 0 rows (aucune policy dangereuse)
-- Si vous voyez des rÃ©sultats, APPLIQUEZ IMMÃ‰DIATEMENT le correctif !

-- 5. RÃ©sumÃ© de sÃ©curitÃ©
SELECT
  'orders' AS table_name,
  COUNT(*) FILTER (WHERE cmd = 'INSERT') AS "INSERT policies",
  COUNT(*) FILTER (WHERE cmd = 'SELECT' AND qual = 'false') AS "âœ… SELECT blocked",
  COUNT(*) FILTER (WHERE cmd = 'SELECT' AND qual = 'true') AS "ðŸ”´ SELECT public",
  COUNT(*) FILTER (WHERE cmd = 'UPDATE' AND qual = 'false') AS "âœ… UPDATE blocked",
  COUNT(*) FILTER (WHERE cmd = 'UPDATE' AND qual = 'true') AS "ðŸ”´ UPDATE public",
  COUNT(*) FILTER (WHERE cmd = 'DELETE' AND qual = 'false') AS "âœ… DELETE blocked",
  COUNT(*) FILTER (WHERE cmd = 'DELETE' AND qual = 'true') AS "ðŸ”´ DELETE public"
FROM pg_policies
WHERE tablename = 'orders';

-- RÃ©sultat attendu (SÃ‰CURISÃ‰) :
-- INSERT policies: 1
-- âœ… SELECT blocked: 1
-- ðŸ”´ SELECT public: 0
-- âœ… UPDATE blocked: 1
-- ðŸ”´ UPDATE public: 0
-- âœ… DELETE blocked: 1
-- ðŸ”´ DELETE public: 0

-- ============================================
-- INTERPRÃ‰TATION
-- ============================================
-- Si vous voyez des ðŸ”´ > 0 â†’ DANGER, appliquez le correctif immÃ©diatement
-- Si tous les âœ… = 1 et ðŸ”´ = 0 â†’ SÃ©curitÃ© OK
-- ============================================
